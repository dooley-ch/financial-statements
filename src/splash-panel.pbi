;╔═════════════════════════════════════════════════════════════════════════════════════════════════
;║     splash-panel.pbi                                                                           
;╠═════════════════════════════════════════════════════════════════════════════════════════════════
;║     Created: 12-08-2025 
;║
;║     Copyright (c) 2025 James Dooley <james@dooley.ch>
;║
;║     History:
;║     12-08-2025: Initial version
;╚═════════════════════════════════════════════════════════════════════════════════════════════════
DeclareModule SplashPanelUI
  
  Declare.i CreateSplashPanel(hWindow.i) ; Creates the splash panel
  
  Declare.s SplashPanelUIError() ; Returns last error generated by the library

EndDeclareModule

Module SplashPanelUI
  EnableExplicit
  
  #SPLASH_IMAGE_size = 768
  #SPLASH_Width = #SPLASH_IMAGE_size
  #Splash_Height = #SPLASH_IMAGE_size
  
  UsePNGImageDecoder()
  
  Define lastError$ = ""
  Define.i hMainWindow, hPanel, hSplashImage
  
  Procedure OnResizePanel()
    Shared hPanel, hSplashImage
    Protected.i panelWidth, panelHeght, imageW, imageH, imageX, imageY
    
    panelHeght = GadgetHeight(hPanel, #PB_Gadget_ActualSize)
    panelWidth = GadgetWidth(hPanel, #PB_Gadget_ActualSize)
    
    imageH = GadgetHeight(hSplashImage, #PB_Gadget_RequiredSize)
    imageW = GadgetWidth(hSplashImage, #PB_Gadget_RequiredSize) 
    
    imageX = (panelWidth - imageW) / 2
    imageY = (panelHeght - imageH) / 2
    
    ResizeGadget(hSplashImage, imageX, imageY, imageW, imageH)
  EndProcedure
  
  ;┌───────────────────────────────────────────────────────────────────────────────────────────────
  ;│     Public     
  ;└───────────────────────────────────────────────────────────────────────────────────────────────

  ; Returns last error generated by the library
  Procedure.s SplashPanelUIError()
    Shared lastError$
    ProcedureReturn lastError$
  EndProcedure
  
  ; Creates the splash panel
  ;
  ; Params
  ; hWindow - The ID of the main window
  ;
  Procedure.i CreateSplashPanel(hWindow.i) 
    Shared hMainWindow, hPanel, hSplashImage, lastError$
    Protected hImage.i
    
    lastError$ = #Empty$
    
    If IsWindow(hWindow)
      hMainWindow = hWindow
      
      hImage = CatchImage(#PB_Any, ?SplashImage)
      
      hPanel = ContainerGadget(#PB_Any, 10, 10, 300, 300, #PB_Container_BorderLess)
      If IsGadget(hPanel)
          hSplashImage = ImageGadget(#PB_Any, 10, 10, #SPLASH_Width, #Splash_Height, ImageID(hImage))
        CloseGadgetList()
        
        BindGadgetEvent(hPanel, @OnResizePanel(), #PB_EventType_Resize)
        
        ProcedureReturn hPanel
      EndIf
      
      lastError$ = "Failed to create splash panel, invalid ID returned"
      ProcedureReturn 0         
    EndIf
    
    lastError$ = "Invalid window ID passed to CreateSplashPanel function"
    ProcedureReturn 0    
  EndProcedure
  
  DataSection
    SplashImage:
    IncludeBinary #PB_Compiler_FilePath + "res/about/app-icon@" + #SPLASH_IMAGE_size + "px.png"
  EndDataSection
EndModule
; IDE Options = PureBasic 6.21 - C Backend (MacOS X - arm64)
; ExecutableFormat = Console
; CursorPosition = 75
; FirstLine = 50
; Folding = -
; EnableXP
; DPIAware