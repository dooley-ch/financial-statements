;╔═════════════════════════════════════════════════════════════════════════════════════════════════
;║     build_panel.pbi                                                                        
;╠═════════════════════════════════════════════════════════════════════════════════════════════════
;║     Created: 12-08-2025 
;║
;║     Copyright (c) 2025 James Dooley <james@dooley.ch>
;║
;║     History:
;║     12-08-2025: Initial version
;╚═════════════════════════════════════════════════════════════════════════════════════════════════
DeclareModule BuildPanelUI
  
  Declare.i CreateBuildPanel(hWindow.i) ; Creates the import panel
  
  Declare.s BuildPanelUIError() ; Returns last error generated by the library

EndDeclareModule

Module BuildPanelUI
  EnableExplicit

  UseModule Consts
  
  #TITLE_IMAGE_X = #PANEL_DEFAULT_GADGET_PADDING * 2 
  #TITLE_IMAGE_Y = #PANEL_DEFAULT_GADGET_PADDING
  #TITLE_LABEL_X = #TITLE_IMAGE_X + #PANEL_TITLE_BAR_IMAGE_WIDTH - (#PANEL_DEFAULT_GADGET_PADDING * 2)
  #TITLE_LABEL_Y = #TITLE_IMAGE_Y 
  
  Define lastError$ = ""
  Define.i hMainWindow, hPanel, hTitleBar, hTitleImage, hTitleLabel
  
  Procedure OnResizePanel()
    Shared hPanel, hTitleBar
    Protected.i panelWidth, panelHeght
    
    panelHeght = GadgetHeight(hPanel, #PB_Gadget_ActualSize)
    panelWidth = GadgetWidth(hPanel, #PB_Gadget_ActualSize)
    
    ResizeGadget(hTitleBar, 0, 0, panelWidth, #PANEL_TITLE_BAR_HEIGHT)
  EndProcedure
  
  Procedure OnTitleBarResize()
    Shared hPanel, hTitleLabel
    Protected.i labelWidth
    
    labelWidth = GadgetWidth(hPanel, #PB_Gadget_ActualSize) - #TITLE_LABEL_X - (#PANEL_DEFAULT_GADGET_PADDING * 2)
    
    ResizeGadget(hTitleLabel, #PB_Ignore, #PB_Ignore, labelWidth, #PB_Ignore)
  EndProcedure
  
  Procedure CreateTitleBar()
    Shared hTitleBar, hTitleImage, hTitleLabel, lastError$
    Protected hImage.i, hFont.i
    
    lastError$ = #Empty$
    
    hTitleBar = ContainerGadget(#PB_Any, 5, 5, 300, #PANEL_TITLE_BAR_HEIGHT, #PB_Container_BorderLess)
    If IsGadget(hTitleBar)
      hImage = CatchImage(#PB_Any, ?LogoImage)
      hFont = LoadFont(#PB_Any, "", #PANEL_TITLE_BAR_TEXT_HEIGHT)
      
        hTitleImage = ImageGadget(#PB_Any, #TITLE_IMAGE_X, #TITLE_IMAGE_Y, #PANEL_TITLE_BAR_IMAGE_HEIGHT, #PANEL_TITLE_BAR_IMAGE_WIDTH, ImageID(hImage))
        
        hTitleLabel = TextGadget(#PB_Any, #TITLE_LABEL_X, #TITLE_LABEL_Y, 50, #PANEL_TITLE_BAR_IMAGE_HEIGHT, "Build Database")
        SetGadgetColor(hTitleLabel, #PB_Gadget_FrontColor, PANEL_TITLE_Color)
        SetGadgetFont(hTitleLabel, FontID(hFont))
        CloseGadgetList()
        
        BindGadgetEvent(hTitleBar, @OnTitleBarResize(), #PB_EventType_Resize)
      
      SetGadgetColor(hTitleBar, #PB_Gadget_BackColor, PANEL_TITLE_BAR_Background)
    EndIf
  EndProcedure
  
  ;┌───────────────────────────────────────────────────────────────────────────────────────────────
  ;│     Public     
  ;└───────────────────────────────────────────────────────────────────────────────────────────────

  ; Returns last error generated by the library
  Procedure.s BuildPanelUIError()
    Shared lastError$
    ProcedureReturn lastError$
  EndProcedure
  
  ; Creates the build panel
  ;
  ; Params
  ; hWindow - The id of the main window
  ;
  Procedure.i CreateBuildPanel(hWindow.i) 
    Shared hMainWindow, hPanel, lastError$
    Protected hImage.i
    
    lastError$ = #Empty$
    
    If IsWindow(hWindow)
      hMainWindow = hWindow
      
      hPanel = ContainerGadget(#PB_Any, 10, 10, 300, 300, #PB_Container_BorderLess)
      If IsGadget(hPanel)
        CreateTitleBar()
        CloseGadgetList()
        
        BindGadgetEvent(hPanel, @OnResizePanel(), #PB_EventType_Resize)
       
        ProcedureReturn hPanel
      EndIf
      
      lastError$ = "Failed to create build panel, invalid ID returned"
      ProcedureReturn 0         
    EndIf
    
    lastError$ = "Invalid window ID passed to CreateBuildPanel function"
    ProcedureReturn 0    
  EndProcedure
  
  DataSection
    LogoImage:
    IncludeBinary #PB_Compiler_FilePath + "res/panels/build@48px.png"
  EndDataSection  
EndModule
; IDE Options = PureBasic 6.21 - C Backend (MacOS X - arm64)
; ExecutableFormat = Console
; CursorPosition = 63
; Folding = --
; EnableXP
; DPIAware