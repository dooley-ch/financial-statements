;╔═════════════════════════════════════════════════════════════════════════════════════════════════
;║     toolbar.pbi                                                                           
;╠═════════════════════════════════════════════════════════════════════════════════════════════════
;║     Created: 09-08-2025 
;║
;║     Copyright (c) 2025 James Dooley <james@dooley.ch>
;║
;║     History:
;║     09-08-2025: Initial version
;╚═════════════════════════════════════════════════════════════════════════════════════════════════
DeclareModule ToolBarModule
  
  Declare.i CreateAppToolBar(hWindow.i) ; Creates the toolbar 
  
  Declare.s ToolBarModuleError() ; Returns last error generated by the library

EndDeclareModule

Module ToolBarModule
  EnableExplicit
  
  UseModule Consts
  
  UsePNGImageEncoder()
  
  Define lastError$ = ""
  Define.i hMainWindowId, hToolBarId
  
  Procedure OnButtonClicked()
    Shared hMainWindowId
    Protected item.i = EventMenu()
    
    Select item
      Case #File_Quit
        PostEvent(#APP_EVENT_Quit, hMainWindowId, #PB_Ignore, #PB_Ignore)
      Case #Action_Preferences
        PostEvent(#APP_EVENT_Setup, hMainWindowId, #PB_Ignore, #PB_Ignore)
      Case #Help_Manual
        PostEvent(#APP_EVENT_Manual, hMainWindowId, #PB_Ignore, #PB_Ignore)
    EndSelect
  EndProcedure  
  ;┌───────────────────────────────────────────────────────────────────────────────────────────────
  ;│     Public     
  ;└───────────────────────────────────────────────────────────────────────────────────────────────

  ; Returns last error generated by the library
  Procedure.s ToolBarModuleError()
    Shared lastError$
    ProcedureReturn lastError$
  EndProcedure
  
  ; Creates the toolbar 
  ;
  ; Params
  ; hWindow - The main window id
  ;
  ; Returns: The id of the new toolbar
  ;
  Procedure.i CreateAppToolBar(hWindow.i)
    Shared hMainWindowId, hToolBarId, lastError$
    Protected hQuitButtonIcon, hSettingsButtonIcon, hManualButtonIcon
    
    lastError$ = #Empty$
    
    If IsWindow(hWindow)
      hMainWindowId = hWindow
      
      hQuitButtonIcon = CatchImage(#PB_Any, ?FileQuitIcon)
      hSettingsButtonIcon = CatchImage(#PB_Any, ?ActionSettingsIcon)
      hManualButtonIcon = CatchImage(#PB_Any, ?HelpManualIcon)
      
      hToolBarId = CreateToolBar(#PB_Any, WindowID(hMainWindowId), #PB_ToolBar_Large | #PB_ToolBar_Text)
      ToolBarImageButton(#File_Quit, ImageID(hQuitButtonIcon), #PB_ToolBar_Normal, "Quit") 
      ToolBarSeparator()
      ToolBarImageButton(#Action_Preferences, ImageID(hSettingsButtonIcon), #PB_ToolBar_Normal, "Settings")
      ToolBarSeparator()
      ToolBarImageButton(#Help_Manual, ImageID(hManualButtonIcon), #PB_ToolBar_Normal, "Manual")  
      
      BindEvent(#PB_Event_Menu, @OnButtonClicked(), hMainWindowId)
      
      ProcedureReturn hToolBarId
    EndIf
    
    lastError$ = "Invalid window ID passed to CreateAppToolBar function"
    ProcedureReturn 0
  EndProcedure
  
  DataSection
    FileQuitIcon:
    IncludeBinary #PB_Compiler_FilePath + "res/toolbar-menu/exit@24px.png"
    
    ActionSettingsIcon:
    IncludeBinary #PB_Compiler_FilePath + "res/toolbar-menu/settings@24px.png"
    
    HelpManualIcon:
    IncludeBinary #PB_Compiler_FilePath + "res/toolbar-menu/manual@24px.png"
    
    HelpAboutIcon:
    IncludeBinary #PB_Compiler_FilePath + "res/toolbar-menu/about@24px.png"    
  EndDataSection  
EndModule
; IDE Options = PureBasic 6.21 - C Backend (MacOS X - arm64)
; ExecutableFormat = Console
; CursorPosition = 35
; FirstLine = 33
; Folding = -
; EnableXP
; DPIAware